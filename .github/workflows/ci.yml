name: CI pipeline

on:
  push:
    branches: [ "master" ]


jobs:
  # run_tests:
  #   runs-on: ubuntu-latest
  #   container:
  #     image: python:alpine
  #   steps:
  #   - uses: actions/checkout@v4
  #   - name: Install requirments
  #     run: pip install -r requirements.txt
  #   - name: Run tests
  #     run: python3 -m unittest test_*.py
  build:
    # needs: run_tests
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    - name: Create tag
      run: echo "GIT_SHA_SHORT=$(echo $GITHUB_SHA | cut -c 1-7)" >> $GITHUB_ENV
    - name: Create docker image
      run: docker build -t lorissxd/webapp_cicd:$GIT_SHA_SHORT .
    - name: Login to Dockerhub
      env:
        DOCKER_USERNAME: ${{secrets.DOCKER_USERNAME}}
        DOCKER_PASSWORD: ${{secrets.DOCKER_PASSWORD}}
      run: docker login -u $DOCKER_USERNAME -p $DOCKER_PASSWORD
    - name: Push image to Dockerhub
      run: docker push lorissxd/webapp_cicd:$GIT_SHA_SHORT
  create_tag:
    needs: build
    name: Just test variable
    runs-on: ubuntu-latest
    outputs:
      new_tag: ${{ steps.create_tag.outputs.NEW_TAG }}
    steps:
    - name: Create tag
      id: create_tag
      run: echo "NEW_TAG"=$GIT_SHA_SHORT >> $GITHUB_OUTPUT
  deploy:
    needs: create_tag
    name: deploy
    runs-on: ubuntu-latest
    env:
      NEW_TAG: ${{ needs.create_tag.outputs.new_tag }}
    steps:
    - name: Echo variable
      run: echo NEW_TAG=5555
    - name: executing remote ssh commands using password
      uses: appleboy/ssh-action@v0.1.10
      with:
        host: ${{ secrets.SSH_HOST }}
        username: ${{ secrets.SSH_USERNAME }}
        passphrase: ${{ secrets.SSH_PASSPHRASE }}
        key: ${{ secrets.SSH_KEY }}
        port: ${{ secrets.SSH_PORT}}
        envs: NEW_TAG
        script: |
          sed "s~\(image: lorissxd/webapp_cicd.*\)~image: lorissxd/webapp_cicd:$NEW_TAG~g" -i ~/webapp_cicd/docker-compose.yaml
          docker compose -f ~/webapp_cicd/docker-compose.yaml down && docker compose -f ~/webapp_cicd/docker-compose.yaml up -d



name: Server pipeline

on:
  push:
    branches: [ "master" ]

jobs:
  create_server:
    name: Configure AWS credentials
    runs-on: ubuntu-latest
    outputs:
      ip_addr: ${{ steps.a.outputs.SERVER_IP }}
    steps:
    - uses: actions/checkout@v4
    - uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: ${{ secrets.AWS_DEFAULT_REGION }}
    - name: Creating server / Finding public ip address
      id: a
      run: |
           aws ec2 run-instances \
           --image-id ami-01e444924a2233b07 \
           --count 1 \
           --key-name Ec2_server \
           --instance-type t2.micro \
           --key-name "Nikita_Relevant" \
           --region eu-central-1 \
           --user-data file://user_data.txt \
           --security-group-ids sg-0adba3fd89dc7ef06 | awk '/"InstanceId"/ { print $2 }' | tr -d ,\" > output.txt
           echo "instance_id=$(cat output.txt)" >> GITHUB_OUTPUT
           aws ec2 describe-instances \
           --instance-ids $instance_id \
           --query 'Reservations[*].Instances[*].PublicIpAddress' \
           --output text > output2.txt
           echo "SERVER_IP=$(cat output2.txt)" >> $GITHUB_OUTPUT
           ls

  configure_server:
    name: Configuring server connection
    needs: create_server
    runs-on: ubuntu-latest
    env:
      TAKE_PUBLIC: ${{ needs.create_server.outputs.ip_addr }}
    steps:
    - uses: actions/checkout@v4
    - name: Taking ip from previous job
      run: |
        sudo apt install nmap >/dev/null 2>/dev/null
        echo $TAKE_PUBLIC
        sed "s/ipv4/$TAKE_PUBLIC/g" -i "con_host.sh"
        cat con_host.sh
        ls
        ./con_host.sh
    - name: Executing remote ssh commands using AWS credentials
      uses: appleboy/ssh-action@v0.1.10
      with:
        host: ${{ env.TAKE_PUBLIC }}
        username: ${{ secrets.SSH_USERNAME }}
        passphrase: ${{ secrets.SSH_PASSPHRASE }}
        key: ${{ secrets.SSH_KEY }}
        port: ${{ secrets.SSH_PORT }}
        debug: true
        envs: ${{ secrets.GIT_TOKEN }}
        script: |
          mkdir project && cd project
          ls
          whoami
          

